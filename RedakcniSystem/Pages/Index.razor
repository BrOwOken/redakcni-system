@using RedakcniSystem.Data;
@page "/"
@inject ArticleService articleService
@inject NavigationManager nav
@inject UsersService us 

<h2 class="mb-4">Articles</h2>
<div class="card-columns">
    @foreach (var article in articles)
    {
        <div class="card">
            <img class="card-img-top" src="@article.ImageUrl" alt="Article image">
            <div class="card-body">
                <h5 class="card-title">@article.Title</h5>
                <p class="card-text">@article.Content.Substring(0, 200)...</p>
                <button @onclick="(e) => { ViewArticle(article.Id); }" class="btn btn-primary">View</button>
                <AuthorizeView Roles="admin, redactor">
                    <Authorized>
                        <button class="btn btn-dark" @onclick="(e) => { EditArticle(article.Id); }">Edit</button>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Roles="admin">
                    <Authorized>
                        <button class="btn btn-danger" @onclick="(e) => { DeleteArticle(article.Id); }">Delete</button>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
    }
</div>


@code {
    List<Article> articles = new List<Article>();


    protected override void OnInitialized()
    {
        articles = articleService.GetArticles();
    }
    private EventCallback ViewArticle(int id)
    {
        nav.NavigateTo($"article/{id}");
        return new EventCallback();
    }
    public EventCallback DeleteArticle(int id)
    {
        articleService.DeleteArticle(id);
        this.StateHasChanged();
        return new EventCallback();
    }
    public EventCallback EditArticle(int id)
    {
        nav.NavigateTo($"edit/{id}");
        return new EventCallback();
    }
}